const userTableBody = document.getElementById("usertableBody");

async function loadUser() {
    const response = await fetch("LoadUser");
    if (response.ok) {
        const json = await response.json();
        if (json.status) {
            console.log(json);
            const users = json.uList; // or json.users depending on your servlet response
            userTableBody.innerHTML = "";

            users.forEach(user => {
                const tr = document.createElement("tr");

                const tdId = document.createElement("td");
                tdId.textContent = user.id;
                tr.appendChild(tdId);

                const tdFirstName = document.createElement("td");
                tdFirstName.textContent = user.first_name;
                tr.appendChild(tdFirstName);

                const tdLastName = document.createElement("td");
                tdLastName.textContent = user.last_name;
                tr.appendChild(tdLastName);

                const tdEmail = document.createElement("td");
                tdEmail.textContent = user.email;
                tr.appendChild(tdEmail);

                const tdMobile = document.createElement("td");
                tdMobile.textContent = user.mobile;
                tr.appendChild(tdMobile);
                
                    const tdCreatedAt = document.createElement("td");
                tdCreatedAt.textContent = formatDate(user.created_at); // field from backend
                tr.appendChild(tdCreatedAt);

                userTableBody.appendChild(tr);
            });
        } else {
            alert("Failed to load users: " + json.message);
        }
    } else {
        alert("Network error while loading users");
    }
}


function formatDate(isoDateStr) {
    const date = new Date(isoDateStr);
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, '0'); // 0-based
    const day = String(date.getDate()).padStart(2, '0');
    return `${year}-${month}-${day}`;
}

async function generateUserPDF() {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF();

    // ===  Insert Logo ===
    const logoBase64 = 'assets/images/logo.png'; // Replace with your base64 logo

    // x, y, width, height
    doc.addImage(logoBase64, 'PNG', 14, 10, 30, 15);

    // ===  Add Title ===
    doc.setFontSize(16);
    doc.text("User Details Report", 105, 20, null, null, "center");

    //  Add Current Date ===
    const today = new Date();
    const formattedDate = today.toISOString().split('T')[0]; // YYYY-MM-DD
    doc.setFontSize(10);
    doc.text("Date: " + formattedDate, 160, 28);

    // === 
    const head = [['User ID', 'First Name', 'Last Name', 'Email', 'Mobile', 'Created At']];
    const body = [];

    const response = await fetch("LoadUser");
    const json = await response.json();

    if (json.status) {
        json.uList.forEach(user => {
            const createdAt = formatDate(user.created_at);
            body.push([
                user.id,
                user.firstName,
                user.lastName,
                user.email,
                user.mobile,
                createdAt
            ]);
        });

        doc.autoTable({
            startY: 35,
            head: head,
            body: body,
            theme: 'grid',
            headStyles: { fillColor: [0, 123, 255] },
            styles: { fontSize: 9, cellPadding: 2 },
        });

        // === ðŸ”» Footer ===
        const pageHeight = doc.internal.pageSize.height;
        doc.setFontSize(10);
        doc.text("Generated by SmartShop Admin", 14, pageHeight - 10);

        // === ðŸ’¾ Save PDF ===
        doc.save("user-report.pdf");
    } else {
        alert("Failed to load users for PDF");
    }
}


async function viewUserPDF() {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF();

    // === Logo (optional) ===
    const logoBase64 =  'assets/images/logo.png';  
    doc.addImage(logoBase64, 'PNG', 14, 10, 30, 15);

    // === Title ===
    doc.setFontSize(16);
    doc.text("User Details Report", 105, 20, null, null, "center");

    // === Date ===
    const today = new Date();
    const formattedDate = today.toISOString().split('T')[0];
    doc.setFontSize(10);
    doc.text("Date: " + formattedDate, 160, 28);

    // === Table ===
    const head = [['User ID', 'First Name', 'Last Name', 'Email', 'Mobile', 'Created At']];
    const body = [];

    const response = await fetch("LoadUser");
    const json = await response.json();

    if (json.status) {
        json.uList.forEach(user => {
            const createdAt = formatDate(user.created_at);
            body.push([
                user.id,
                user.first_name,
                user.last_name,
                user.email,
                user.mobile,
                createdAt
            ]);
        });

        doc.autoTable({
            startY: 35,
            head: head,
            body: body,
            theme: 'grid',
            headStyles: { fillColor: [0, 123, 255] },
            styles: { fontSize: 9, cellPadding: 2 },
        });

        // === Footer ===
        const pageHeight = doc.internal.pageSize.height;
        doc.setFontSize(10);
        doc.text("Generated by SmartShop Admin", 14, pageHeight - 10);

        // === VIEW IN NEW TAB ===
        const blobUrl = doc.output("bloburl");
        window.open(blobUrl, "_blank");

    } else {
        alert("Failed to load users for PDF");
    }
}
